pipeline {
    agent any

    options {
        timeout(time: 3, unit: 'MINUTES')
    }

    environment {
        ARTIFACT_ID = "juan2203/movie-api:${env.BUILD_ID}"
    }

    stages {
        stage("Build"){
            steps{
                script {
                    def customImage = docker.build("${env.ARTIFACT_ID}")
                }
            }
        }

        stage('Run tests') {
            steps {
                sh "docker run -p 3000:3000 -e MYSQL_HOST=${env.MYSQL_HOST} \
                    -e MYSQL_USER=${env.MYSQL_USER} \
                    -e MYSQL_PASS=${MYSQL_PASS} \
                    -e MYSQL_DB=${MYSQL_DB} juan2203/movie-api:${env.BUILD_ID}"
            }
        }

        stage("Publish"){
            steps {
                script {
                    docker.withRegistry("", "dockerHub") {
                        customImage.push()
                    }
                }
            }   
        }

    }  


}

/*
node {
    checkout scm

    docker.withRegistry('', 'dockerHub') {

        def customImage = docker.build("")

        customImage.inside {
            sh 'docker run -p 3000:3000 -e MYSQL_HOST=${env.MYSQL_HOST} \
            -e MYSQL_USER=${env.MYSQL_USER} \
            -e MYSQL_PASS=${MYSQL_PASS} \
            -e MYSQL_DB=${MYSQL_DB} juan2203/movie-api:${env.BUILD_ID}'
        }

        
        customImage.push()
    }
}*/